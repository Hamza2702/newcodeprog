using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;

namespace testing
{
    internal class Program
    {

        static class Storage
        {
            public static string title, info;

        }

        static void Area()
        {
            Storage.title = @"
     /\                   
    /  \   _ __ ___  __ _ 
   / /\ \ | '__/ _ \/ _` |
  / ____ \| | |  __/ (_| |
 /_/    \_\_|  \___|\__,_|";

            string shape = ""; double length = 0, area = 0, perimeter = 0, apothem = 0;
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Magenta;
            Console.WriteLine(Storage.title);
            Console.ResetColor();
            string desc = "\nThis program finds the area of a regular polygon (3-12 sides).\nEnter the amount of sides:";

            Console.WriteLine(desc);

            int sides = 0;
            while (!int.TryParse(Console.ReadLine(), out sides) || sides <= 2 || sides >= 13)
            {
                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.WriteLine("Invalid input. Enter a valid number:");
                Console.ResetColor();
            }

            string desc2 = "The regular polygon you chose is a ";
            Console.Write(desc2);
            Console.ForegroundColor = ConsoleColor.Green;
            int side1 = Convert.ToInt32(sides);

            switch (side1)
            {

                case 3:
                    shape = "trigon";
                    Console.Write("trigon.\n");
                    break;
                case 4:
                    shape = "tetragon";
                    Console.Write("tetragon.\n");
                    break;
                case 5:
                    shape = "pentagon";
                    Console.Write("pentagon.\n");
                    break;
                case 6:
                    shape = "hexagon";
                    Console.Write("hexagon.\n");
                    break;
                case 7:
                    shape = "heptagon";
                    Console.Write("heptagon.\n");
                    break;
                case 8:
                    shape = "octagon";
                    Console.Write("octagon.\n");
                    break;
                case 9:
                    shape = "nonagon";
                    Console.Write("nonagon.\n");
                    break;
                case 10:
                    shape = "decagon";
                    Console.Write("decagon.\n");
                    break;
                case 11:
                    shape = "undecagon";
                    Console.Write("undecagon.\n");
                    break;
                case 12:
                    shape = "dodecagon";
                    Console.Write("dodecagon.\n");
                    break;
                default:
                    break;
            }

            Console.ResetColor();

            string desc3 = "Enter the length of one side of the polygon:";
            Console.WriteLine(desc3);

            while (!double.TryParse(Console.ReadLine(), out length) || length <= 0)
            {
                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.WriteLine("Invalid input. Enter a number:");
                Console.ResetColor();
            }

            perimeter = sides * length;

            apothem = length / (2 * (Math.Tan(Math.PI / sides)));
            area = (apothem * perimeter) / 2;

            area = Math.Round(area, 2); // Round output to 2 dp
            Console.Clear();

            // Cleanup + Output

            Console.ForegroundColor = ConsoleColor.Magenta;
            Console.WriteLine(Storage.title);
            Console.ResetColor();
            Console.WriteLine(desc);
            Console.ForegroundColor = ConsoleColor.DarkYellow;
            Console.WriteLine(sides);
            Console.ResetColor();
            Console.Write(desc2);
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Write($"{shape}\n");
            Console.ResetColor();
            Console.WriteLine(desc3);
            Console.ForegroundColor = ConsoleColor.DarkYellow;
            Console.WriteLine(length);
            Console.ResetColor();

            string desc4 = "\nChoose an option:";
            Console.WriteLine(desc4);

            string output = $"The area for your regular polygon is:\n{area}cm\u00b2";

            Storage.info = desc + "\n" + sides + "\n" + desc2 + shape + "\n" + desc3 + "\n" + length + "\n" + output + desc4;

            int choices = MenuChoices("Find the Area of another regular polygon.", "Find the Perimeter of a regular polygon.", "Go back to the Main Menu.");

            switch (choices)
            {
                case 0:
                    Area();
                    break;
                case 1:
                    Perimeter();
                    break;
                case 2:
                    MainMenu();
                    break;
            }

        }

        static void Perimeter()
        {
            Storage.title = "______         _                _            \r\n| ___ \\       (_)              | |           \r\n| |_/ /__ _ __ _ _ __ ___   ___| |_ ___ _ __ \r\n|  __/ _ \\ '__| | '_ ` _ \\ / _ \\ __/ _ \\ '__|\r\n| | |  __/ |  | | | | | | |  __/ ||  __/ |   \r\n\\_|  \\___|_|  |_|_| |_| |_|\\___|\\__\\___|_|\n";
            string shape = ""; double length = 0, perimeter = 0;
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Magenta;
            Console.WriteLine(Storage.title);
            Console.ResetColor();
            string desc = "This program finds the perimeter of a regular polygon (3-12 sides).\nEnter the amount of sides:";

            Console.WriteLine(desc);

            int sides = 0;
            while (!int.TryParse(Console.ReadLine(), out sides) || sides <= 2 || sides >= 13)
            {
                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.WriteLine("Invalid input. Enter a number:");
                Console.ResetColor();
            }

            string desc2 = "The regular polygon you chose is a ";
            Console.Write(desc2);
            Console.ForegroundColor = ConsoleColor.Green;
            int side1 = Convert.ToInt32(sides);

            switch (side1)
            {

                case 3:
                    shape = "trigon";
                    Console.Write("trigon.\n");
                    break;
                case 4:
                    shape = "tetragon";
                    Console.Write("tetragon.\n");
                    break;
                case 5:
                    shape = "pentagon";
                    Console.Write("pentagon.\n");
                    break;
                case 6:
                    shape = "hexagon";
                    Console.Write("hexagon.\n");
                    break;
                case 7:
                    shape = "heptagon";
                    Console.Write("heptagon.\n");
                    break;
                case 8:
                    shape = "octagon";
                    Console.Write("octagon.\n");
                    break;
                case 9:
                    shape = "nonagon";
                    Console.Write("nonagon.\n");
                    break;
                case 10:
                    shape = "decagon";
                    Console.Write("decagon.\n");
                    break;
                case 11:
                    shape = "undecagon";
                    Console.Write("undecagon.\n");
                    break;
                case 12:
                    shape = "dodecagon";
                    Console.Write("dodecagon.\n");
                    break;
                default:
                    break;
            }

            Console.ResetColor();

            string desc3 = "Enter the length of one side of the polygon:";
            Console.WriteLine(desc3);

            while (!double.TryParse(Console.ReadLine(), out length) || length <= 0)
            {
                Console.ForegroundColor = ConsoleColor.DarkYellow;
                Console.WriteLine("Invalid input. Enter a number:");
                Console.ResetColor();
            }

            perimeter = sides * length;

            perimeter = Math.Round(perimeter, 2);
            Console.Clear();

            // Cleanup + Output

            Console.ForegroundColor = ConsoleColor.Magenta;
            Console.WriteLine(Storage.title);
            Console.ResetColor();
            Console.WriteLine(desc);
            Console.ForegroundColor = ConsoleColor.DarkYellow;
            Console.WriteLine(sides);
            Console.ResetColor();
            Console.Write(desc2);
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Write($"{shape}\n");
            Console.ResetColor();
            Console.WriteLine(desc3);
            Console.ForegroundColor = ConsoleColor.DarkYellow;
            Console.WriteLine(length);
            Console.ResetColor();

            string desc4 = "\nChoose an option:";
            Console.WriteLine(desc4);

            string output = $"The perimeter for your regular polygon is:\n{perimeter}cm";

            Storage.info = desc + "\n" + sides + "\n" + desc2 + shape + "\n" + desc3 + "\n" + length + "\n" + output + desc4;

            int choices = MenuChoices("Find the Perimeter of another regular polygon.", "Find the Area of a regular polygon.", "Go back to the Main Menu.");

            switch (choices)
            {
                case 0:
                    Perimeter();
                    break;
                case 1:
                    
                    Area();
                    break;
                case 2:
                    MainMenu();
                    break;
            }
        }

        static void MainMenu()
        {
            Console.Clear();
            Storage.info = "Welcome to my program. The program calculates the perimeter and area of a polygon.\nUse the arrow keys (↑ and ↓) and press the return key to navigate to a program.";
            Storage.title = " /'\\_/`\\            __              /'\\_/`\\                          \r\n/\\      \\     __   /\\_\\    ___     /\\      \\     __    ___   __  __  \r\n\\ \\ \\__\\ \\  /'__`\\ \\/\\ \\ /' _ `\\   \\ \\ \\__\\ \\  /'__`\\/' _ `\\/\\ \\/\\ \\ \r\n \\ \\ \\_/\\ \\/\\ \\L\\.\\_\\ \\ \\/\\ \\/\\ \\   \\ \\ \\_/\\ \\/\\  __//\\ \\/\\ \\ \\ \\_\\ \\\r\n  \\ \\_\\\\ \\_\\ \\__/.\\_\\\\ \\_\\ \\_\\ \\_\\   \\ \\_\\\\ \\_\\ \\____\\ \\_\\ \\_\\ \\____/\r\n   \\/_/ \\/_/\\/__/\\/_/ \\/_/\\/_/\\/_/    \\/_/ \\/_/\\/____/\\/_/\\/_/\\/___/ \r\n\n";
          
            int choices = MenuChoices("Area", "Perimeter");

            switch (choices)
            {
                case 0:
                    Storage.title = @"
     /\                   
    /  \   _ __ ___  __ _ 
   / /\ \ | '__/ _ \/ _` |
  / ____ \| | |  __/ (_| |
 /_/    \_\_|  \___|\__,_|";
                    Area();
                    break;
                case 1:
                    Storage.title = "______         _                _            \r\n| ___ \\       (_)              | |           \r\n| |_/ /__ _ __ _ _ __ ___   ___| |_ ___ _ __ \r\n|  __/ _ \\ '__| | '_ ` _ \\ / _ \\ __/ _ \\ '__|\r\n| | |  __/ |  | | | | | | |  __/ ||  __/ |   \r\n\\_|  \\___|_|  |_|_| |_| |_|\\___|\\__\\___|_|\n";
                    Perimeter();
                    break;
            }
            Console.ReadLine();
        }

        static void Main(string[] args)
        {
            MainMenu();
        }

          public static int MenuChoices(params string[] options) // pass choices in parameters
          {
              // Array, keep track of where you are
              int currentSelection = 0;

              ConsoleKey key;

              Console.CursorVisible = false;

              do
              {
                Console.Clear();
                Console.ForegroundColor = ConsoleColor.Magenta;
                Console.WriteLine(Storage.title);
                Console.ResetColor();
                Console.WriteLine(Storage.info);

                for (int i = 0; i < options.Length; i++)
                  {

                      if (i == currentSelection)

                          Console.BackgroundColor = ConsoleColor.Magenta; // Change the colour to anything you like

                      Console.Write($"\n\t{options[i]}");
                      Console.ResetColor();
                  }

                  key = Console.ReadKey(true).Key;

                  switch (key)
                  {
                      case ConsoleKey.UpArrow:
                          {
                              currentSelection--;
                              if (currentSelection < 0)
                              {
                                  currentSelection = options.Length - 1;
                              }
                              break;
                          }
                      case ConsoleKey.DownArrow:
                          {
                              currentSelection++;
                              if (currentSelection > options.Length - 1)
                              {
                                  currentSelection = 0;
                              }
                              break;
                          }
                  }
              } while (key != ConsoleKey.Enter);

              Console.CursorVisible = true;
              return currentSelection;
          }
    }
}
